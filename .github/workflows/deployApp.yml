name: DeployApp

on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_iOS:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'
      
      - name: Setup config files
        env:
          CONFIG_ZIP_BASE64: ${{ secrets.CONFIG_ZIP_BASE64 }}
        run: |
          CONFIG_ZIP_PATH=$GITHUB_WORKSPACE/config.zip
          echo -n "$CONFIG_ZIP_BASE64" | base64 --decode -o $CONFIG_ZIP_PATH
          unzip $CONFIG_ZIP_PATH
          rm $CONFIG_ZIP_PATH
          dart run ./scripts/setup_flavor.dart prod

      - name: Install Apple distribution certificate and provisioning profile
        env:
          DISTRIBUTION_CERTIFICATE_P12_BASE64: ${{ secrets.DISTRIBUTION_CERTIFICATE_P12_BASE64 }}
          DISTRIBUTION_CERTIFICATE_P12_PASSWORD: ${{ secrets.DISTRIBUTION_CERTIFICATE_P12_PASSWORD }}
          RELEASE_PROVISIONING_PROFILE_BASE64: ${{ secrets.RELEASE_PROVISIONING_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/distribution_certificate.p12
          PROVISIONING_PROFILE_PATH=$RUNNER_TEMP/release_provisioning_profile.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$DISTRIBUTION_CERTIFICATE_P12_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$RELEASE_PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PROVISIONING_PROFILE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$DISTRIBUTION_CERTIFICATE_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PROVISIONING_PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install Dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test

      - name: Build ipa
        run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist
      
      - name: Upload ipa to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cine-remote-ios
          path: build/ios/ipa/*.ipa


  deploy_iOS:
    runs-on: macos-latest
    needs: [ build_iOS ]

    steps:
      - name: Download ipa from artifacts
        uses: actions/download-artifact@v3
        with:
          name: cine-remote-ios

      - name: Display downloaded files
        run: ls -R

      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v1
        with: 
          app-path: 'cine_remote.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}